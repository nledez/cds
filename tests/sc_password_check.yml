name: Password Check TestSuite
testcases:
- name: prepare test
  steps:
  - script: {{.cds.build.cdsctl}} project delete --force ITPWDCHECK
  - script: {{.cds.build.cdsctl}} project add ITPWDCHECK ITPWDCHECK ITPWDCHECK

- name: Checking project variable leak
  steps:
  - script: {{.cds.build.cdsctl}} project variable add ITPWDCHECK foo password P4SSproj
  - script: {{.cds.build.cdsctl}} project variable show ITPWDCHECK foo
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking env variable leak
  steps:
  - script: {{.cds.build.cdsctl}} environment create ITPWDCHECK envfoo
  - script: {{.cds.build.cdsctl}} environment variable add ITPWDCHECK envfoo foo password P4SSenv
  - script: {{.cds.build.cds}} environment variable show ITPWDCHECK envfoo
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking app variable leak
  steps:
  - script: {{.cds.build.cdsctl}} application add ITPWDCHECK TestApp
  - script: {{.cds.build.cdsctl}} application variable add ITPWDCHECK TestApp foo password P4SSapp
  - script: {{.cds.build.cdsctl}} application variable list ITPWDCHECK TestApp
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking pipeline parameter password leak
  steps:
  - script: {{.cds.build.cds}} pipeline add ITPWDCHECK deploy --type=deployment
  - script: {{.cds.build.cds}} pipeline parameter add ITPWDCHECK deploy foo "{{.cds.app.foo}}" string "hidden password"
  - script: {{.cds.build.cds}} pipeline parameter show ITPWDCHECK deploy
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking password variable still available to worker
  steps:
  - script: {{.cds.build.cds}} pipeline job add ITPWDCHECK deploy myJob1
  - script: {{.cds.build.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passenv={{.cds.env.yolo}}'"
  - script: {{.cds.build.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passproj={{.cds.proj.foo}}'"
  - script: {{.cds.build.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passapp={{.cds.app.foo}}'"
  - script: {{.cds.build.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passpip={{.cds.pip.foo}}'"
  - script: {{.cds.build.cdsctl}} environment variable add ITPWDCHECK envfoo yolo password P4SSyolo
  - script: {{.cds.build.cds}} application pipeline add ITPWDCHECK TestApp deploy -p "foo={{.cds.app.foo}}"

- name: Expecting P4SS variable here
  steps:
  - script: {{.cds.build.cds}} pipeline run ITPWDCHECK TestApp deploy envfoo
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldContainSubstring passenv=**cds.env.yolo**
      - result.systemout ShouldContainSubstring passproj=**cds.proj.foo**
      - result.systemout ShouldContainSubstring passapp=**cds.app.foo**

- name: clean
  steps:
  - script: {{.cds.build.cdsctl}} project delete --force ITPWDCHECK
  - script: {{.cds.build.cdsctl}} group delete ITPWDCHECK --force
